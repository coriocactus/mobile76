module P2 (
  testP2,
) where

{- 
  Each new term in the Fibonacci sequence
  is generated by adding the previous two terms.
  By starting with 1 and 2, the first 10 terms will be:
  1, 2, 3, 5, 8, 13, 21, 34, 55, 89 ...
  By considering the terms in the Fibonacci sequence
  whose values do not exceed four million,
  find the sum of the even-valued terms.
  -}

import Control.Exception

limit :: Integer
limit = 4 * (10 ^ (6 :: Integer))

evenFibSum :: Integer -> Integer -> Integer -> Integer
evenFibSum x y z
  | x > z = 0
  | x <= z && even x = x + evenFibSum y (x + y) z
  | otherwise = evenFibSum y (x + y) z

testP2 :: IO ()
testP2 = do
  putStr "Example: "
  assert (evenFibSum 1 2 100 == 44) (putStrLn "Passed!")
  putStr "Test Case: " 
  print (evenFibSum 1 2 limit)
